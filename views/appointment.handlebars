{{> customer_header }}

<div class="content-body">

  {{> form_errors}}

  <div id="appointment-view"></div>
  <script type="text/babel">

  {{>react_forms}}


  var FormInputService = React.createClass({
    switchWorker: function(event) {
      // change the current worker to be the next one
      var $button = $(event.currentTarget);
      var $groupBtn = $button.closest('.input-group-btn');
      var $workers = $groupBtn.find('ul a');
      var newIndex = 0;
      for (var i = 0; i < $workers.length; i++) {
          if ($($workers[i]).text() == $button.text()) {
              newIndex = (i + 1) % $workers.length;
              break;
          }
      }
      var $newWorker = $($workers[newIndex]);

      $groupBtn.find('input').val($newWorker.text());
      $button.text($newWorker.text());
      $button.css('color', $newWorker.css('color'));
    },
    selectWorker: function(event) {
      // set the current worker from the selected one in the dropdown
      var $a = $(event.currentTarget);
      var newText = $a.text();
      var newColor = $a.css('color');

      var $groupBtn = $a.closest('.input-group-btn');
      var $btn = $groupBtn.find('button:eq(0)');
      $btn.text(newText);
      $btn.css('color', newColor);
      $groupBtn.find('input').val(newText);
    },
    render: function() {
      var that = this;
      var workers = this.props.workers.map(function(worker) {
        var aStyle = {color: worker.color};
        return (
          <li key={worker.name}>
            <a style={aStyle} href="#" ref={function(a) {
              // Probably due to a react.js bug, the standard onClick
              // method does not call the selectWorker when the click
              // is performed via javascript (using the console or
              // nightwatch).
              // The jQuery approach does not suffer this problem.
              $(a).on('click', that.selectWorker);
            }}>
              {worker.name}
            </a>
          </li>
        );
      });

      var buttonStyle = {color: this.props.worker.color};
      return (
        <div className="form-group service">
          <div className="col-sm-12">
            <div className="input-group">
              <span className="input-group-addon">
                <input type="checkbox" name="enabled" value={this.props.index}
                  defaultChecked={this.props.checked}/>
              </span>
              <input type="text" className="form-control"
                defaultValue={this.props.description} name="service"/>
              <div className="input-group-btn">
                <button type="button" className="btn btn-default btn-click"
                  style={buttonStyle} onClick={this.switchWorker}>
                  {this.props.worker.name}
                </button>
                <input type="hidden" name="worker"
                  defaultValue={this.props.worker.name}/>
                <button type="button" className="btn btn-default dropdown-toggle" data-toggle="dropdown">
                    <span className="caret"></span>
                </button>
                <ul className="dropdown-menu dropdown-menu-right" role="menu">
                  {workers}
                </ul>
              </div>
            </div>
          </div>
        </div>
      );
    }
  });

  var AppointmentForm = React.createClass({
    render: function() {
      var that = this;
      var services = this.props.services.map(function(service, index) {
        return (
          <FormInputService index={index} checked={service.checked}
            description={service.description} worker={service.worker}
            workers={that.props.workers} key={index} />
        );
      });

      return (
        <div className="form-container">
          <form id="form" className="form-horizontal customer" method="post">
            <div className="form-group">
              <h4 className="col-sm-12">{{{i18n.title}}}</h4>
            </div>
            <FormInputDate name='date' value='{{date}}' label='{{i18n.date}}'/>
            {services}

            <div className="form-group">
                <div className="col-sm-12">
                    <button className="btn btn-default btn-add" onClick={this.props.addService}>
                      {{i18n.addService}}
                    </button>
                </div>
            </div>

            <div className="form-group">
                <div className="col-sm-12">
                    <label>{{i18n.notes}}</label>
                    <textarea name="notes" className="form-control" rows="5">
                      {{notes}}
                    </textarea>
                </div>
            </div>

            <input type='hidden' name="_csrf" value="{{csrftoken}}"/>
            <div className="form-group">
                <div className="col-sm-12">
                    <button type="submit" className="btn btn-primary" name="submit">
                      {{i18n.submit}}
                    </button>
                </div>
            </div>
          </form>
        </div>
      );
    }
  });

  var Appointment = React.createClass({
    getInitialState: function() {
      return {
        workers: {{{json workers}}},
        services: {{{json services}}}
      }
    },
    addService: function(event) {
      event.preventDefault();
      event.stopPropagation();
      var services = this.state.services.slice();
      services.push({
        checked: false,
        description: '',
        worker: this.state.workers[0]
      });

      this.setState({
        workers: this.state.workers,
        services: services
      });
    },
    render: function() {
      if (this.state.workers.length === 0) {
        return (
          <div className="alert alert-danger" role="alert">
            {{{i18n.setWorkersMsg}}}
          </div>
        );
      }

      if (this.state.services.length === 0) {
        return (
          <div className="alert alert-danger" role="alert">
            {{{i18n.setServicesMsg}}}
          </div>
        );
      }

      return (
        <AppointmentForm
          services={this.state.services}
          workers={this.state.workers}
          addService={this.addService}/>
      );
    }
  });

  ReactDOM.render(
    <Appointment/>,
    document.getElementById('appointment-view')
  );

  </script>


</div>
