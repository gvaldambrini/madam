<div id="products-view"></div>

<script type="text/babel">

{{>react_tables}}


var ProductsTable = React.createClass({
  mixins: [BaseTable],
  goToCloneForm: function(event) {
    window.location.href = $(event.currentTarget).data('clone-url');
    event.stopPropagation();
  },
  render: function() {
    var that = this;
    var productRows = this.props.data.products.map(function(product, index) {
      var productDetails = product.objects.map(function(object) {
        return (
          <tr key={object.urlDelete} data-edit-url={object.urlEdit} onClick={that.goToEditForm}>
            <td>{object.date}</td>
            <td>{object.notes}</td>
            <td className="no-padding">
              <span onClick={function(event) {event.stopPropagation();}} className="pull-right glyphicon glyphicon-trash"
                data-toggle="tooltip" data-placement="left"
                title={object.deleteText} data-delete-url={object.urlDelete} ref={
                  function(span) {
                    if (span != null) {
                      var $span = $(span);
                      $span.tooltip();
                      $span.confirmPopover({
                        template: '#popover-template',
                        title: '{{i18n.deleteTitle}}',
                        content: '{{i18n.deleteMsg}}',
                        $rootContainer: $('#products-table-container'),
                        onConfirm: function() {
                          that.deleteRow($span);
                        }
                      });
                    }
                  }
                }></span>
            </td>
          </tr>
        );
      });

      return [
        <tr key={product.name + product.brand} data-toggle="collapse" data-target={'#expanded-row' + index}>
          <td dangerouslySetInnerHTML={that.renderHighlight(product.name)} />
          <td dangerouslySetInnerHTML={that.renderHighlight(product.brand)} />
          <td>{product.count}</td>
          <td className="no-padding">
            <span className="pull-right glyphicon glyphicon-plus"
              data-toggle="tooltip" data-placement="left"
              title={product.cloneText} data-clone-url={product.urlClone}
              onClick={that.goToCloneForm} ref={
                function(span) {
                  if (span !== null) {
                    $(span).tooltip();
                  }
                }
              }></span>
          </td>
        </tr>,
        <tr>
          <td colSpan={4} className="hidden-row">
            <div id={'expanded-row' + index} className="collapse">
              <table className='table table-hover'>
                  <thead data-toggle="collapse" data-target={'#expanded-row' + index}>
                    <tr>
                      <th>{product.headerDate}</th>
                      <th>{product.headerNotes}</th>
                      <th></th>
                    </tr>
                  </thead>
                  <tbody>
                    {productDetails}
                  </tbody>
              </table>
            </div>
          </td>
        </tr>
      ];
    });

    return (
      <table className='table table-hover'>
        <thead>
          <tr>
            <th>{this.props.data.headerName}</th>
            <th>{this.props.data.headerBrand}</th>
            <th>{this.props.data.headerCount}</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          {productRows}
        </tbody>
      </table>
    );
  }
});


var Products = React.createClass({

  getInitialState: function() {
    return {
      data: {{{json productsData}}},
      filterText: ''
    };
  },
  search: function(text) {
    if (typeof text === 'undefined') {
      text = this.state.filterText;
    }

    this.setState({
      data: this.state.data,
      filterText: text
    });

    var that = this;
    $.ajax({
        url: '{{urlSearch}}',
        data: {
          text: text
        },
        success: function(msg) {
          that.setState({
            data: msg,
            filterText: text
          });
        }
    });
  },
  render: function() {
    var products;
    if (this.state.data.products.length > 0) {
      products = <ProductsTable data={this.state.data} search={this.search}/>;
    }
    else {
      products = <div className="alert alert-info" role="alert">{this.state.data.emptyMsg}</div>;
    }

    return (
      <div>
        <div className="content-header">
          <a href='{{urlNew}}' className='btn btn-primary'>{{i18n.addNewProduct}}</a>
          <InputSearch search={this.search} />
        </div>
        <div id="products-table-container" className="content-body">
          {products}
        </div>
        <div id="popover-template">
          <PopoverTemplate confirm='{{i18n.btnConfirm}}' cancel='{{i18n.btnCancel}}'/>
        </div>
      </div>
    );
  }
});

ReactDOM.render(
  <Products />,
  document.getElementById('products-view')
);
</script>
